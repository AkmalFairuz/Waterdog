From 598e57afbf7a2e4674d85f4addb93b57b76d85ae Mon Sep 17 00:00:00 2001
From: Colin Godsey <crgodsey@gmail.com>
Date: Sat, 14 Dec 2019 10:50:33 -0700
Subject: [PATCH] TEMP-newblocks


diff --git a/protocol/pom.xml b/protocol/pom.xml
index 126d4adf..754c17f0 100644
--- a/protocol/pom.xml
+++ b/protocol/pom.xml
@@ -31,9 +31,22 @@
                 <enabled>true</enabled>
             </snapshots>
         </repository>
+        <!-- Waterdog start -->
+        <repository>
+            <id>nukkitx-repo</id>
+            <url>https://repo.nukkitx.com/maven-releases</url>
+        </repository>
+        <!-- Waterdog end -->
     </repositories>
 
     <dependencies>
+        <!-- Waterdog start -->
+        <dependency>
+            <groupId>com.nukkitx</groupId>
+            <artifactId>nbt</artifactId>
+            <version>1.4.2</version>
+        </dependency>
+        <!-- Waterdog end -->
         <dependency>
             <groupId>net.md-5</groupId>
             <artifactId>brigadier</artifactId>
diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
index 9a43480a..4c9e54d3 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/Protocol.java
@@ -573,6 +573,9 @@ public enum Protocol
         // Waterdog start
         public boolean hasPacket(Class<? extends DefinedPacket> packet, int version) {
             ProtocolData protocol = protocols.get( version );
+            if (protocol == null) {
+                return false;
+            }
             return protocol.packetMap.containsKey(packet);
         }
         // Waterdog end
diff --git a/protocol/src/main/java/network/ycc/waterdog/pe/packet/PELogin.java b/protocol/src/main/java/network/ycc/waterdog/pe/packet/PELogin.java
index 2cf9cf50..553713ff 100644
--- a/protocol/src/main/java/network/ycc/waterdog/pe/packet/PELogin.java
+++ b/protocol/src/main/java/network/ycc/waterdog/pe/packet/PELogin.java
@@ -1,6 +1,10 @@
 package network.ycc.waterdog.pe.packet;
 
+import com.nukkitx.nbt.stream.NBTInputStream;
+import com.nukkitx.nbt.stream.NetworkDataInputStream;
+
 import io.netty.buffer.ByteBuf;
+import io.netty.buffer.ByteBufInputStream;
 
 import lombok.Data;
 import lombok.EqualsAndHashCode;
@@ -9,8 +13,11 @@ import lombok.NoArgsConstructor;
 import net.md_5.bungee.protocol.DefinedPacket;
 import net.md_5.bungee.protocol.ProtocolConstants;
 import net.md_5.bungee.protocol.packet.Login;
+
 import network.ycc.waterdog.pe.PEDataValues;
 
+import java.io.IOException;
+
 @Data
 @NoArgsConstructor
 @EqualsAndHashCode(callSuper = false)
@@ -130,18 +137,31 @@ public class PELogin extends Login {
         buf.readLongLE(); //world ticks
         DefinedPacket.readSVarInt(buf); //enchantment seed FFS MOJANG
 
-        final int paletteItems = DefinedPacket.readVarInt(buf);
-        final int paletteStart = buf.readerIndex();
-        for (int i = 0 ; i < paletteItems ; i++) {
-            final int strLength = DefinedPacket.readVarInt(buf);
-            if (protocolVersion >= ProtocolConstants.MINECRAFT_PE_1_12) {
-                buf.skipBytes(strLength + 4);
-            } else {
-                buf.skipBytes(strLength + 2);
+        if (protocolVersion >= ProtocolConstants.MINECRAFT_PE_1_13) {
+            final int paletteStart = buf.readerIndex();
+            try {
+                final ByteBufInputStream is = new ByteBufInputStream(buf);
+                new NBTInputStream(new NetworkDataInputStream(is)).readTag();
+            } catch (IOException e) {
+                throw new IllegalArgumentException("Failed to parse palette NBT", e);
+            }
+            payloadPaletteOffset = paletteStart - payloadStartIndex;
+            payloadPaletteLength = buf.readerIndex() - paletteStart;
+            // item palette after this, but we don't care yet
+        } else {
+            final int paletteItems = DefinedPacket.readVarInt(buf);
+            final int paletteStart = buf.readerIndex();
+            for (int i = 0; i < paletteItems; i++) {
+                final int strLength = DefinedPacket.readVarInt(buf);
+                if (protocolVersion >= ProtocolConstants.MINECRAFT_PE_1_12) {
+                    buf.skipBytes(strLength + 4);
+                } else {
+                    buf.skipBytes(strLength + 2);
+                }
             }
+            payloadPaletteOffset = paletteStart - payloadStartIndex;
+            payloadPaletteLength = buf.readerIndex() - paletteStart;
         }
-        payloadPaletteOffset = paletteStart - payloadStartIndex;
-        payloadPaletteLength = buf.readerIndex() - paletteStart;
 
         buf.skipBytes(buf.readableBytes()); //skip the rest
     }
diff --git a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
index b6685f57..82000e6f 100644
--- a/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
+++ b/proxy/src/main/java/net/md_5/bungee/ServerConnector.java
@@ -306,6 +306,8 @@ public class ServerConnector extends PacketHandler
             if (login instanceof network.ycc.waterdog.pe.packet.PELogin) {
                 network.ycc.waterdog.pe.packet.PELogin peLogin = (network.ycc.waterdog.pe.packet.PELogin) login;
 
+                // TODO: version support check
+
                 modLogin = new network.ycc.waterdog.pe.packet.PELogin( login.getEntityId(),
                         login.getGameMode(), (byte) login.getDimension(), login.getDifficulty(),
                         (byte) user.getPendingConnection().getListener().getTabListSize(), login.getLevelType(),
diff --git a/proxy/src/main/java/network/ycc/waterdog/pe/PEBlockPalette.java b/proxy/src/main/java/network/ycc/waterdog/pe/PEBlockPalette.java
index 0037f220..2300fffb 100644
--- a/proxy/src/main/java/network/ycc/waterdog/pe/PEBlockPalette.java
+++ b/proxy/src/main/java/network/ycc/waterdog/pe/PEBlockPalette.java
@@ -2,8 +2,13 @@ package network.ycc.waterdog.pe;
 
 import com.google.common.collect.MapMaker;
 
+import com.nukkitx.nbt.stream.NBTInputStream;
+import com.nukkitx.nbt.stream.NetworkDataInputStream;
+import com.nukkitx.nbt.tag.CompoundTag;
+import com.nukkitx.nbt.tag.ListTag;
 import io.netty.buffer.ByteBuf;
 
+import io.netty.buffer.ByteBufInputStream;
 import it.unimi.dsi.fastutil.objects.Object2ShortLinkedOpenHashMap;
 import it.unimi.dsi.fastutil.objects.Object2ShortMap;
 import it.unimi.dsi.fastutil.shorts.Short2ObjectLinkedOpenHashMap;
@@ -14,6 +19,8 @@ import net.md_5.bungee.protocol.ProtocolConstants;
 
 import org.apache.commons.lang3.tuple.Pair;
 
+import java.io.DataInput;
+import java.io.IOException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.util.UUID;
@@ -87,15 +94,24 @@ public final class PEBlockPalette {
     PEBlockPalette(ByteBuf buf, int version, UUID uuid) {
         this.uuid = uuid;
 
-        int id = 0;
-        while (buf.isReadable()) {
-            final String name = DefinedPacket.readString(buf);
-            final short data = buf.readShortLE();
-            if (version >= ProtocolConstants.MINECRAFT_PE_1_12) {
-                buf.readShortLE(); //what does this id do?
+        if (version >= ProtocolConstants.MINECRAFT_PE_1_13) {
+            try {
+                final DataInput is = new NetworkDataInputStream(new ByteBufInputStream(buf));
+                ListTag<CompoundTag> tag = (ListTag<CompoundTag>) new NBTInputStream(is).readTag();
+            } catch (IOException e) {
+                throw new IllegalArgumentException("Failed to parse palette NBT", e);
+            }
+        } else {
+            int id = 0;
+            while (buf.isReadable()) {
+                final String name = DefinedPacket.readString(buf);
+                final short data = buf.readShortLE();
+                if (version >= ProtocolConstants.MINECRAFT_PE_1_12) {
+                    buf.readShortLE(); //what does this id do?
+                }
+
+                addEntry((short) id++, name, data);
             }
-
-            addEntry((short) id++, name, data);
         }
     }
 
-- 
2.17.2 (Apple Git-113)

